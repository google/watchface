/*
 * Copyright 2023 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java-library'
apply plugin: 'maven-publish'

dependencies {
    implementation 'xml-apis:xml-apis:1.4.01'
    implementation 'org.exist-db.thirdparty.xerces:xercesImpl:2.12.0:xml-schema-1.1'
    implementation 'com.rackspace.eclipse.webtools.sourceediting:org.eclipse.wst.xml.xpath2.processor:2.1.100'
    implementation 'edu.princeton.cup:java-cup:10k'
}

// bundle documents into a zip file
tasks.register("bundleDocs", Zip) {
    from '../documents/'
    include '**/*'
    archiveBaseName = "docs"
    archiveVersion = ""
    destinationDirectory = layout.buildDirectory.dir('libs')
}

compileJava.dependsOn(bundleDocs)

// configure the library jar
jar {
    // include the XSDs, which are used as resources
    from ('build/libs') {
        include 'docs.zip'
    }
    // exclude the runner class, which is not needed in the library jar
    exclude 'com/samsung/watchface/DWFValidationApplication.class'
}

tasks.register('executable-jar', Jar) {
    dependsOn("jar")
    exclude("META-INF/maven/**")

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.main.output

    from ('build/libs') {
        include 'docs.zip'
    }

    archiveBaseName = "wff-validator"
    archiveVersion = ""

    manifest {
        attributes 'Main-Class': 'com.samsung.watchface.DWFValidationApplication'
        attributes 'Version': version
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}